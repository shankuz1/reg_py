version: '3.8'

services:
  my-postgres:
    image: postgres:latest
    container_name: my-postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: studentnew   # <-- match app.py
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data

  backend:
    image: dummy-be  # Use the locally built image
    container_name: backend
    volumes:
      - ./backend_logs:/app/logs
    restart: always
    ports:
      - "3002:3002"
    depends_on:
      - my-postgres
    
  frontend:
    image: fe-dummy  # Use the locally built image
    container_name: frontend
    restart: always
    ports:
      - "5173:5173"
    depends_on:
      - backend

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otelcol-contrib-config.yaml:/etc/otelcol-contrib-config.yaml
      # - ./sample.log:/var/log/sample.log
      - ./backend_logs:/var/log/app
    ports:
      - "4317:4317"
      - "4318:4318"
    command: ["--config=/etc/otelcol-contrib-config.yaml"]
    container_name: otel-collector
    

  # tempo:
  #   image: grafana/tempo:latest
  #   container_name: tempo
  #   ports:
  #     - "3200:3200"
  #   command: ["-config.file=/etc/tempo.yaml"]
  #   volumes:
  #     - "./tempo.yaml:/etc/tempo.yaml"
    
  tempo:
    image: grafana/tempo:2.6.0
    ports:
      - "3200:3200"
      - "9411:9411"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - "./tempo.yaml:/etc/tempo.yaml"

  # The Loki service stores logs sent to it, and takes queries from Grafana
  # to visualise those logs.
  loki:
    image: grafana/loki:3.2.0
    command: ["--pattern-ingester.enabled=true", "-config.file=/etc/loki/local-config.yaml"]
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data:/loki

  mimir:
    image: grafana/mimir:latest
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml"]
    ports:
      - "9009:9009"
    volumes:
      - "./mimir.yaml:/etc/mimir.yaml"
  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    # container_name: grafana
    volumes:
      - "./datasource-grafana/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml"  #/etc/grafana/provisioning"
    ports:
      - "3000:3000/tcp"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
     # - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
     # - GF_AUTH_ANONYMOUS_ENABLED=true
     # - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
     # - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      #- GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    depends_on:
      - loki


volumes:
  pg-data: